// <auto-generated />
using System;
using Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190511195149_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Domain.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDateTime");

                    b.Property<DateTime?>("DeleteTime");

                    b.Property<Guid?>("DeleterId");

                    b.HasKey("Id");

                    b.HasIndex("DeleterId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Data.Domain.Messege", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ChatId");

                    b.Property<string>("Context")
                        .IsRequired();

                    b.Property<DateTime>("CreationDateTime");

                    b.Property<DateTime?>("DeleteTime");

                    b.Property<Guid?>("DeleterId");

                    b.Property<Guid>("ReciverId");

                    b.Property<Guid>("SenderId");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("DeleterId");

                    b.HasIndex("ReciverId");

                    b.HasIndex("SenderId");

                    b.ToTable("Messeges");
                });

            modelBuilder.Entity("Data.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ChatId");

                    b.Property<DateTime>("CreationDateTime");

                    b.Property<DateTime?>("DeleteTime");

                    b.Property<Guid?>("DeleterId");

                    b.Property<string>("PhoneNumber")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("DeleterId")
                        .IsUnique()
                        .HasFilter("[DeleterId] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data.Domain.UserChat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ChatId");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("UserChat");
                });

            modelBuilder.Entity("Data.Domain.Chat", b =>
                {
                    b.HasOne("Data.Domain.User", "Deleter")
                        .WithMany()
                        .HasForeignKey("DeleterId");
                });

            modelBuilder.Entity("Data.Domain.Messege", b =>
                {
                    b.HasOne("Data.Domain.Chat", "Chat")
                        .WithMany("Messeges")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data.Domain.User", "Deleter")
                        .WithMany()
                        .HasForeignKey("DeleterId");

                    b.HasOne("Data.Domain.User", "Reciver")
                        .WithMany()
                        .HasForeignKey("ReciverId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Data.Domain.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Data.Domain.User", b =>
                {
                    b.HasOne("Data.Domain.Chat")
                        .WithMany("Users")
                        .HasForeignKey("ChatId");

                    b.HasOne("Data.Domain.User", "Deleter")
                        .WithOne()
                        .HasForeignKey("Data.Domain.User", "DeleterId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Data.Domain.UserChat", b =>
                {
                    b.HasOne("Data.Domain.Chat", "Chat")
                        .WithMany("UserChats")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Data.Domain.User", "User")
                        .WithMany("UserChats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
